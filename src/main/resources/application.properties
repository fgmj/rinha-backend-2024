server.port=8080
server.tomcat.max-threads = 4

spring.datasource.url=jdbc:postgresql://${DB_HOSTNAME}:5432/rinha
spring.datasource.username=rinha
spring.datasource.password=backend


#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout=60000

#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=10

#maximum pool size
spring.datasource.hikari.maximum-pool-size=10

#maximum idle time for connection
spring.datasource.hikari.idle-timeout=10000

#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1


# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = none
#spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=never
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Show or not log for each sql query
#spring.config.activate.on-profile=dev
#spring.jpa.show-sql = true


# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect